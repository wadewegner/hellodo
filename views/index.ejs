<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hello, DigitalOcean!</title>
    <link rel="stylesheet" href="/css/style.css" />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
  </head>
  <body>
    <div id="story-container">
      <div id="image-container">
        <img id="story-image" src="" alt="" hidden />
      </div>
      <div id="text-container">
        <div id="message" class="display-4"></div>
        <div id="continue-message" class="small-italic">click to continue</div>
      </div>
    </div>

    <script src="/js/typeit.bundle.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const messages = [
          {
            text: [
              "Hi, I’m Wade. ",
              " Pleased to meet you.",
              " I am so excited to join you at DigitalOcean.",
            ],
            image: "/images/image1.png",
            imageHeight: "30%",
            imageWidth: "30%",
          },
          {
            text: [
              "I’ve either been a developer, advocated for developers, or built for developers my entire career.",
            ],
            image: "/images/image2.png",
            imageHeight: "60%",
            imageWidth: "60%",
          },
          {
            text: [
              "I spent the first decade of my career slinging code.",
              " Lots of .NET and JavaScript.",
              " Also a lot of SharePoint, BizTalk, even some RPG on an AS/400 (but don’t tell anyone).",
            ],
            image: "/images/image3.png",
            imageHeight: "80%",
            imageWidth: "80%",
          },
          {
            text: [
              "After that, I spent years as a tech evangelist at Microsoft.",
              " I had so much fun building keynote demos, creating sample apps and tutorials, and traveling the world educating developers.",
            ],
            image: "/images/image4.png",
            imageHeight: "80%",
            imageWidth: "80%",
          },
          {
            text: [
              "I eventually found my way to product management.",
              " I’ve led product for PowerApps, Microsoft Azure, Salesforce Platform, Heroku, RapidAPI, and so much more.",
            ],
            image: "/images/image5.png",
            imageHeight: "100%",
            imageWidth: "100%",
          },
          {
            text: [
              "One of my favorite product memories is a BillG review where I built a not-yet-announced PowerApp on the fly for Bill simply to get his autograph.",
              " It worked.",
              " (I was just off screen to his left.)",
            ],
            image: "/images/image6.png",
            imageHeight: "100%",
            imageWidth: "100%",
          },
          {
            text: [
              "Through it all, what I’ve enjoyed the most is helping developers build amazing apps.",
              " And that's why I'm here!",
            ],
            image: "/images/image7.png",
            imageHeight: "100%",
            imageWidth: "100%",
          },
          {
            text: [
              "Outside of work, I married my high school sweetheart and best friend, Teri.",
              " We have three amazing kids: Hayley (18), Katie (16), and Ethan (13).",
            ],
            image: "/images/image8.png",
            imageHeight: "100%",
            imageWidth: "100%",
          },
          {
            text: ["We also have the two cutest doodles, Oskar and Rizzo."],
            image: "/images/image9.png",
            imageHeight: "40%",
            imageWidth: "40%",
          },
          {
            text: [
              "When I’m not playing chauffeur or with family, I’m usually running on trails.",
              " I do it a lot.",
              " I’m not fast, but I’m stubborn.",
            ],
            image: "/images/image10.png",
            imageHeight: "100%",
            imageWidth: "100%",
          },
          {
            text: [
              "I’m really excited for the future of DigitalOcean.",
              " I’ve known Paddy for a long time, and I believe in his vision.",
              " I’m thrilled for the opportunity to work with all of you to help make it happen.",
            ],
            image: "/images/image11.png",
            imageHeight: "100%",
            imageWidth: "100%",
          },
        ];

        let messageIndex = 0;
        let typeItInstance = null;
        let typingComplete = false;

        const loadImage = (index, callback) => {
          const imageElement = document.getElementById("story-image");
          if (messages[index].image) {
            imageElement.src = messages[index].image;
            imageElement.style.height = messages[index].imageHeight || "auto";
            imageElement.style.width = messages[index].imageWidth || "auto";
            imageElement.hidden = false;

            imageElement.onload = () => {
              let opacity = 0;
              const fadeIn = setInterval(() => {
                if (opacity >= 1) {
                  clearInterval(fadeIn);
                  if (callback) callback();
                } else {
                  opacity += 0.1;
                  imageElement.style.opacity = opacity;
                }
              }, 50);
            };
          } else {
            if (callback) callback();
          }
        };

        const typeMessage = (index) => {
          const messageElement = document.getElementById("message");
          const continueMessage = document.getElementById("continue-message");

          // Clear previous content
          continueMessage.style.opacity = 0;
          messageElement.innerHTML = "";

          typingComplete = false;

          typeItInstance = new TypeIt("#message", {
            speed: 50, // Fixed typing speed
            afterComplete: (instance) => {
              // Mark typing as complete
              typingComplete = true;

              // Add a carriage return by appending a line break
              messageElement.innerHTML += "<br>";

              // Reveal "click to continue" text if not the last message
              if (index < messages.length - 1) {
                setTimeout(() => {
                  continueMessage.style.opacity = 1;
                  continueMessage.hidden = false;
                }, 500);
              }

              // Ensure TypeIt instance is properly destroyed
              instance.destroy();
            },
          });

          const sentences = messages[index].text;

          sentences.forEach((sentence, i) => {
            typeItInstance.type(sentence);
            if (i < sentences.length - 1) {
              typeItInstance.pause(750); // Pause for 750ms after each sentence
            }
          });

          typeItInstance.go();
        };

        const hideElements = (callback) => {
          const messageElement = document.getElementById("message");
          const continueMessage = document.getElementById("continue-message");
          const imageElement = document.getElementById("story-image");

          let opacity = 1;
          const fadeOut = setInterval(() => {
            if (opacity <= 0) {
              clearInterval(fadeOut);
              messageElement.innerHTML = "";
              continueMessage.style.opacity = 0;
              imageElement.style.opacity = 0;
              imageElement.hidden = true;
              if (callback) callback();
            } else {
              opacity -= 0.1;
              messageElement.style.opacity = opacity;
              continueMessage.style.opacity = opacity;
              imageElement.style.opacity = opacity;
            }
          }, 50);
        };

        const displayMessage = (index) => {
          const messageElement = document.getElementById("message");
          const continueMessage = document.getElementById("continue-message");
          const imageElement = document.getElementById("story-image");

          // Reset opacity and hide image to prepare for the next message
          continueMessage.style.opacity = 0;
          messageElement.style.opacity = 1;
          imageElement.style.opacity = 0;
          imageElement.hidden = true;

          // Load image and then type message
          loadImage(index, () => {
            typeMessage(index);
          });
        };

        const advanceMessage = () => {
          if (typingComplete && messageIndex < messages.length - 1) {
            typingComplete = false; // Lock advancement until the next typing is complete
            hideElements(() => {
              messageIndex++;
              displayMessage(messageIndex);
            });
          }
        };

        displayMessage(messageIndex); // Initially display the first message

        // Add the click handler for mouse and touch
        document.addEventListener("click", advanceMessage);
      });
    </script>
  </body>
</html>
