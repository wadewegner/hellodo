<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hello, DigitalOcean!</title>
    <meta name="robots" content="noindex, nofollow" />
    <link
      rel="icon"
      href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ’™</text></svg>"
    />

    <link rel="stylesheet" href="/css/style.css" />
    <link
      rel="stylesheet"
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <script
      defer
      data-domain="walrus-app-l8mtz.ondigitalocean.app"
      src="https://plausible.io/js/script.js"
    ></script>
  </head>
  <body>
    <div id="story-container">
      <div id="image-container">
        <img id="story-image" src="" alt="" hidden />
      </div>
      <div id="text-container">
        <div id="message" class="display-4"></div>
        <div id="continue-message" class="small-italic">click to continue</div>
      </div>
    </div>

    <footer>
      Built on DigitalOcean with ðŸ’™ |
      <a
        href="https://github.com"
        target="https://github.com/wadewegner/hellodo"
        >Github</a
      >
    </footer>

    <script src="/js/typeit.bundle.js"></script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const messages = [
          {
            text: [
              "Hi, Iâ€™m Wade. ",
              " Pleased to meet you.",
              " I am so excited to join you at DigitalOcean.",
            ],
            image: "/images/image1.png",
          },
          {
            text: [
              "Iâ€™ve either been a developer, advocated for developers, or built for developers my entire career.",
            ],
            image: "/images/image2.png",
          },
          {
            text: [
              "I spent the first decade of my career slinging code.",
              " Lots of .NET and JavaScript.",
              " Also a lot of SharePoint, BizTalk, even some RPG on an AS/400 (but donâ€™t tell anyone).",
            ],
            image: "/images/image3.png",
          },
          {
            text: [
              "After that, I spent years as a tech evangelist at Microsoft.",
              " I had so much fun building keynote demos, creating sample apps and tutorials, and traveling the world educating developers.",
            ],
            image: "/images/image4.png",
          },
          {
            text: [
              "I eventually found my way to product management.",
              " Iâ€™ve led product for PowerApps, Microsoft Azure, Salesforce Platform, Heroku, RapidAPI, and so much more.",
            ],
            image: "/images/image5.png",
          },
          {
            text: [
              "One of my favorite product memories is a BillG review where I built a not-yet-announced PowerApp on the fly for Bill simply to get his autograph.",
              " It worked.",
              " (I was just off screen to his left.)",
            ],
            image: "/images/image6.png",
          },
          {
            text: [
              "Through it all, what Iâ€™ve enjoyed the most is helping developers build amazing apps.",
              " And that's why I'm here!",
            ],
            image: "/images/image7.png",
          },
          {
            text: [
              "Outside of work, I married my high school sweetheart and best friend, Teri.",
              " We have three amazing kids: Hayley (18), Katie (16), and Ethan (13).",
            ],
            image: "/images/image8.png",
          },
          {
            text: ["We also have the two cutest doodles, Oskar and Rizzo."],
            image: "/images/image9.png",
          },
          {
            text: [
              "When Iâ€™m not playing chauffeur or with family, Iâ€™m usually running on trails.",
              " I do it a lot.",
              " Iâ€™m not fast, but Iâ€™m stubborn.",
            ],
            image: "/images/image10.png",
          },
          {
            text: [
              "Iâ€™m really excited for the future of DigitalOcean.",
              " Iâ€™ve known Paddy for a long time, and I believe in his vision.",
              " Iâ€™m thrilled for the opportunity to work with all of you to help make it happen.",
            ],
            image: "/images/image11.png",
          },
        ];

        let messageIndex = 0;
        let typingComplete = false;

        const messageElement = document.getElementById("message");
        const continueMessage = document.getElementById("continue-message");
        const imageElement = document.getElementById("story-image");

        const typeMessage = (index) => {
          continueMessage.style.opacity = 0; // Ensure continue message is hidden initially
          continueMessage.hidden = true; // Hide continue message

          messageElement.innerHTML = ""; // Clear out the previous message
          typingComplete = false;

          const typeItInstance = new TypeIt("#message", {
            speed: 40,
            afterComplete: (instance) => {
              typingComplete = true;
              continueMessage.style.opacity = 1; // Show "click to continue" message
              continueMessage.hidden = false; // Ensure it's visible
              instance.destroy(); // Clean up and remove instance
            },
          });

          const sentences = messages[index].text;
          sentences.forEach((sentence, i) => {
            typeItInstance.type(sentence);
            if (i < sentences.length - 1) {
              typeItInstance.pause(750); // Pause between sentences
            }
          });

          typeItInstance.go();
        };

        const loadImage = (index, callback) => {
          if (messages[index].image) {
            imageElement.src = messages[index].image;
            imageElement.hidden = false;
            imageElement.onload = () => {
              imageElement.style.opacity = 1; // Show image when loaded
              callback(); // Type message when image is loaded
            };
          } else {
            callback(); // Type message directly if no image needs to be loaded
          }
        };

        const displayMessage = (index) => {
          messageElement.style.opacity = 1; // Ensure message element is visible
          continueMessage.style.opacity = 0; // Hide the continue text
          continueMessage.hidden = true; // Also set hidden to avoid accidental clicks

          loadImage(index, () => {
            typeMessage(index);
          });
        };

        const advanceMessage = () => {
          if (typingComplete && messageIndex < messages.length - 1) {
            typingComplete = false;
            messageElement.innerHTML = ""; // Clear the message content
            continueMessage.style.opacity = 0; // Hide "click to continue" message
            continueMessage.hidden = true; // Also hide from layout
            messageIndex++; // Increment message index
            displayMessage(messageIndex); // Display the next message
          }
        };

        displayMessage(messageIndex);

        document.addEventListener("click", advanceMessage);
      });
    </script>
  </body>
</html>
